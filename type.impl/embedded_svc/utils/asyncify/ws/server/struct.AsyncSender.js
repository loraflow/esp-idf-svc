(function() {var type_impls = {
"esp_idf_svc":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncSender%3C(),+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embedded_svc/utils/asyncify/ws.rs.html#28-30\">source</a><a href=\"#impl-AsyncSender%3C(),+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"struct\" href=\"embedded_svc/utils/asyncify/ws/server/struct.AsyncSender.html\" title=\"struct embedded_svc::utils::asyncify::ws::server::AsyncSender\">AsyncSender</a>&lt;(), S&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"embedded_svc/ws/trait.Sender.html\" title=\"trait embedded_svc::ws::Sender\">Sender</a> + <a class=\"trait\" href=\"embedded_svc/ws/callback_server/trait.SessionProvider.html\" title=\"trait embedded_svc::ws::callback_server::SessionProvider\">SessionProvider</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.send_blocking\" class=\"method\"><a class=\"src rightside\" href=\"src/embedded_svc/utils/asyncify/ws.rs.html#32-36\">source</a><h4 class=\"code-header\">pub fn <a href=\"embedded_svc/utils/asyncify/ws/server/struct.AsyncSender.html#tymethod.send_blocking\" class=\"fn\">send_blocking</a>(\n    &amp;mut self,\n    frame_type: <a class=\"enum\" href=\"esp_idf_svc/ws/enum.FrameType.html\" title=\"enum esp_idf_svc::ws::FrameType\">FrameType</a>,\n    frame_data: &amp;[u8]\n) -&gt; Result&lt;(), &lt;S as <a class=\"trait\" href=\"embedded_svc/ws/trait.ErrorType.html\" title=\"trait embedded_svc::ws::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_svc/ws/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_svc::ws::ErrorType::Error\">Error</a>&gt;</h4></section></div></details>",0,"esp_idf_svc::http::server::ws::asyncify::EspHttpWsAsyncSender"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncSender%3CU,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embedded_svc/utils/asyncify/ws.rs.html#49-53\">source</a><a href=\"#impl-AsyncSender%3CU,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;U, S&gt; <a class=\"struct\" href=\"embedded_svc/utils/asyncify/ws/server/struct.AsyncSender.html\" title=\"struct embedded_svc::utils::asyncify::ws::server::AsyncSender\">AsyncSender</a>&lt;U, S&gt;<span class=\"where fmt-newline\">where\n    U: <a class=\"trait\" href=\"embedded_svc/utils/asyncify/trait.Unblocker.html\" title=\"trait embedded_svc::utils::asyncify::Unblocker\">Unblocker</a>,\n    S: <a class=\"trait\" href=\"embedded_svc/ws/trait.Sender.html\" title=\"trait embedded_svc::ws::Sender\">Sender</a> + <a class=\"trait\" href=\"embedded_svc/ws/callback_server/trait.SessionProvider.html\" title=\"trait embedded_svc::ws::callback_server::SessionProvider\">SessionProvider</a> + Send + Clone,\n    &lt;S as <a class=\"trait\" href=\"embedded_svc/ws/trait.ErrorType.html\" title=\"trait embedded_svc::ws::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_svc/ws/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_svc::ws::ErrorType::Error\">Error</a>: Send + Sync,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><a class=\"src rightside\" href=\"src/embedded_svc/utils/asyncify/ws.rs.html#55-59\">source</a><h4 class=\"code-header\">pub async fn <a href=\"embedded_svc/utils/asyncify/ws/server/struct.AsyncSender.html#tymethod.send\" class=\"fn\">send</a>(\n    &amp;mut self,\n    frame_type: <a class=\"enum\" href=\"esp_idf_svc/ws/enum.FrameType.html\" title=\"enum esp_idf_svc::ws::FrameType\">FrameType</a>,\n    frame_data: &amp;[u8]\n) -&gt; Result&lt;(), &lt;S as <a class=\"trait\" href=\"embedded_svc/ws/trait.ErrorType.html\" title=\"trait embedded_svc::ws::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_svc/ws/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_svc::ws::ErrorType::Error\">Error</a>&gt;</h4></section></div></details>",0,"esp_idf_svc::http::server::ws::asyncify::EspHttpWsAsyncSender"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()