(function() {var type_impls = {
"esp_idf_svc":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#41\">source</a><a href=\"#impl-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.levels\" class=\"method\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#42\">source</a><h4 class=\"code-header\">pub fn <a href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html#tymethod.levels\" class=\"fn\">levels</a>(&amp;self) -&gt; <a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;</h4></section></div></details>",0,"esp_idf_svc::hal::interrupt::IntrFlags"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-Clone-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Clone for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a>Read more</a></div></details></div></details>","Clone","esp_idf_svc::hal::interrupt::IntrFlags"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CO%3E-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-BitOr%3CO%3E-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; BitOr&lt;O&gt; for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a><span class=\"where fmt-newline\">where\n    O: Into&lt;<a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bitor</a>(self, other: O) -&gt; &lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a> as BitOr&lt;O&gt;&gt;::Output</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a>Read more</a></div></details></div></details>","BitOr<O>","esp_idf_svc::hal::interrupt::IntrFlags"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-Debug-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Debug for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result&lt;(), Error&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Debug","esp_idf_svc::hal::interrupt::IntrFlags"],["<section id=\"impl-Eq-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-Eq-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Eq for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h3></section>","Eq","esp_idf_svc::hal::interrupt::IntrFlags"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CO%3E-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-BitXor%3CO%3E-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; BitXor&lt;O&gt; for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a><span class=\"where fmt-newline\">where\n    O: Into&lt;<a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bitxor</a>(self, other: O) -&gt; &lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a> as BitXor&lt;O&gt;&gt;::Output</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a>Read more</a></div></details></div></details>","BitXor<O>","esp_idf_svc::hal::interrupt::IntrFlags"],["<section id=\"impl-Copy-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-Copy-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Copy for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h3></section>","Copy","esp_idf_svc::hal::interrupt::IntrFlags"],["<section id=\"impl-EnumSetType-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-EnumSetType-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"enumset/traits/trait.EnumSetType.html\" title=\"trait enumset::traits::EnumSetType\">EnumSetType</a> for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h3></section>","EnumSetType","esp_idf_svc::hal::interrupt::IntrFlags"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CO%3E-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-Sub%3CO%3E-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; Sub&lt;O&gt; for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a><span class=\"where fmt-newline\">where\n    O: Into&lt;<a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, other: O) -&gt; &lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a> as Sub&lt;O&gt;&gt;::Output</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub<O>","esp_idf_svc::hal::interrupt::IntrFlags"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-PartialEq-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PartialEq for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ne</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","esp_idf_svc::hal::interrupt::IntrFlags"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CEnumSet%3CInterruptType%3E%3E-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-PartialEq%3CEnumSet%3CInterruptType%3E%3E-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PartialEq&lt;<a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;&gt; for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ne</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<EnumSet<InterruptType>>","esp_idf_svc::hal::interrupt::IntrFlags"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-Not-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Not for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">not</a>(self) -&gt; &lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a> as Not&gt;::Output</h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a>Read more</a></div></details></div></details>","Not","esp_idf_svc::hal::interrupt::IntrFlags"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CO%3E-for-InterruptType\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#impl-BitAnd%3CO%3E-for-InterruptType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; BitAnd&lt;O&gt; for <a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a><span class=\"where fmt-newline\">where\n    O: Into&lt;<a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumset/set/struct.EnumSet.html\" title=\"struct enumset::set::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/interrupt.rs.html#10\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bitand</a>(self, other: O) -&gt; &lt;<a class=\"enum\" href=\"esp_idf_svc/hal/interrupt/enum.InterruptType.html\" title=\"enum esp_idf_svc::hal::interrupt::InterruptType\">InterruptType</a> as BitAnd&lt;O&gt;&gt;::Output</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a>Read more</a></div></details></div></details>","BitAnd<O>","esp_idf_svc::hal::interrupt::IntrFlags"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()